//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"SudokuSolutionsSuperposition\",\"Name\":\"BitstringSuperposition\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs\",\"Position\":{\"Item1\":8,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":33}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":35},\"Item2\":{\"Line\":1,\"Column\":37}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bitstring\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":49},\"Item2\":{\"Line\":1,\"Column\":58}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"SudokuSolutionsSuperposition\",\"Name\":\"BitstringSuperposition\"},\"Attributes\":[],\"SourceFile\":\"/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs\",\"Position\":{\"Item1\":8,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":33}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"SudokuSolutionsSuperposition\",\"Name\":\"BitstringSuperposition_Recursive\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs\",\"Position\":{\"Item1\":12,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":43}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"currentBitString\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":45},\"Item2\":{\"Line\":1,\"Column\":61}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":72},\"Item2\":{\"Line\":1,\"Column\":74}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bitstring\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":86},\"Item2\":{\"Line\":1,\"Column\":95}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Bool\"}]}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"SudokuSolutionsSuperposition\",\"Name\":\"BitstringSuperposition_Recursive\"},\"Attributes\":[],\"SourceFile\":\"/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs\",\"Position\":{\"Item1\":12,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":43}},\"Documentation\":[]}")]
#line hidden
namespace SudokuSolutionsSuperposition
{
    [SourceLocation("/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs", OperationFunctor.Body, 9, 13)]
    public partial class BitstringSuperposition : Operation<(IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid>, ICallable
    {
        public BitstringSuperposition(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<IQArray<Boolean>>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<IQArray<Boolean>>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item1)?.Qubits;
                }
            }
        }

        String ICallable.Name => "BitstringSuperposition";
        String ICallable.FullName => "SudokuSolutionsSuperposition.BitstringSuperposition";
        protected ICallable<(IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid> BitstringSuperposition_Recursive__
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid> __Body__ => (__in__) =>
        {
            var (qs,bitstring) = __in__;
#line 10 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
            BitstringSuperposition_Recursive__.Apply((QArray<Boolean>.Create(0L), qs, bitstring));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.BitstringSuperposition_Recursive__ = this.__Factory__.Get<ICallable<(IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid>>(typeof(BitstringSuperposition_Recursive));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<IQArray<Boolean>>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> qs, IQArray<IQArray<Boolean>> bitstring)
        {
            return __m__.Run<BitstringSuperposition, (IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid>((qs, bitstring));
        }
    }

    [SourceLocation("/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs", OperationFunctor.Body, 13, -1)]
    public partial class BitstringSuperposition_Recursive : Operation<(IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid>, ICallable
    {
        public BitstringSuperposition_Recursive(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>)>, IApplyData
        {
            public In((IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item2)?.Qubits;
                }
            }
        }

        String ICallable.Name => "BitstringSuperposition_Recursive";
        String ICallable.FullName => "SudokuSolutionsSuperposition.BitstringSuperposition_Recursive";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<Double, Double> Microsoft__Quantum__Math__ArcCos
        {
            get;
            set;
        }

        protected ICallable<Double, Double> Microsoft__Quantum__Math__Sqrt
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ControlledOnBitString
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Ry
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid> self
        {
            get;
            set;
        }

        public override Func<(IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid> __Body__ => (__in__) =>
        {
            var (currentBitString,qs,bitstring) = __in__;
#line 15 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
            var zeroLeads = QArray<IQArray<Boolean>>.Create(0L);
#line 17 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
            var oneLeads = QArray<IQArray<Boolean>>.Create(0L);
#line 19 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
            var rows = bitstring.Length;
#line 21 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
            var currentIndex = currentBitString.Length;
#line 23 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
            if (((rows >= 1L) && (currentIndex < qs.Length)))
            {
#line 25 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
                foreach (var row in new QRange(0L, (rows - 1L)))
#line hidden
                {
#line 27 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
                    if (bitstring[row][currentIndex])
                    {
#line 28 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
                        oneLeads = QArray<IQArray<Boolean>>.Add(oneLeads, new QArray<IQArray<Boolean>>(bitstring[row]));
                    }
                    else
                    {
#line 30 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
                        zeroLeads = QArray<IQArray<Boolean>>.Add(zeroLeads, new QArray<IQArray<Boolean>>(bitstring[row]));
                    }
                }

#line 36 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
                var theta = Microsoft__Quantum__Math__ArcCos.Apply(Microsoft__Quantum__Math__Sqrt.Apply((Microsoft__Quantum__Convert__IntAsDouble.Apply(zeroLeads.Length) / Microsoft__Quantum__Convert__IntAsDouble.Apply(rows))));
#line 37 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
                Microsoft__Quantum__Canon__ControlledOnBitString.Apply<IUnitary>((currentBitString, Microsoft__Quantum__Intrinsic__Ry)).Apply((qs.Slice(new QRange(0L, (currentIndex - 1L))), ((2D * theta), qs[currentIndex])));
#line 41 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
                self.Apply((QArray<Boolean>.Add(currentBitString, new QArray<Boolean>(false)), qs, zeroLeads?.Copy()));
#line 42 "/Users/scapape/OneDrive/Projects/qsharp/Sudoku/Sudoku/SudokuSolutionsSuperposition.qs"
                self.Apply((QArray<Boolean>.Add(currentBitString, new QArray<Boolean>(true)), qs, oneLeads?.Copy()));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Math__ArcCos = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.ArcCos));
            this.Microsoft__Quantum__Math__Sqrt = this.__Factory__.Get<ICallable<Double, Double>>(typeof(global::Microsoft.Quantum.Math.Sqrt));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.Microsoft__Quantum__Canon__ControlledOnBitString = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ControlledOnBitString<>));
            this.Microsoft__Quantum__Intrinsic__Ry = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Ry));
            this.self = this;
        }

        public override IApplyData __DataIn__((IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Boolean> currentBitString, IQArray<Qubit> qs, IQArray<IQArray<Boolean>> bitstring)
        {
            return __m__.Run<BitstringSuperposition_Recursive, (IQArray<Boolean>,IQArray<Qubit>,IQArray<IQArray<Boolean>>), QVoid>((currentBitString, qs, bitstring));
        }
    }
}